Allan's Version Control Lesson 1 Reflections

1) How did viewing a diff between two versions of a file help you spot the bug?

It was helpful because it gave me what changed in the old file and what became in the new file. So in that way I can see more easily what caused the bug.



2) Como ter fácil acesso a todo o histórico de um arquivo pode torná-lo um programador mais eficiente no longo prazo?

Poderá verificar e corrigir erros mais rapidamente e fazer testes com diferentes versões.



3) Na sua opinião, quais são os prós e contras de escolher manualmente quando criar um commit, como ocorre no Git, v. o salvamento automático de versões, como no Google Docs?

Alterações mais lógicas e organizadas, versionamento mais fácil.


4) Por que você acha que alguns sistemas de controle de versão, como o Git, permitem salvar vários arquivos em um commit, enquanto outros, como o Google Docs, tratam cada arquivo separadamente?

Porque em alguns códigos algumas funções incluem alterações em mais de um árquivo.


5) Como usar os comandos git log e git diff para visualizar o histórico dos arquivos?

Git log para ver as commits feitos.
E git diff para comparar entre dois commits (git diff first_id second_id)


6) De que modo o controle de versão pode dar a você mais segurança para fazer alterações que podem danificar algo?

Dando avisos.


7) Agora que você já configurou a sua área de trabalho, você quer usar o Git para quê?

Controlar versões de projetos para facilitar a correção de detecção de bugs. E facilitar o desenvolvimento.